@*USING para poder objener la data*@
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims;
@using System.Threading.Tasks;
@inject Ob_Usuario obUsuario
@inject NavigationManager NavigationManager



<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Asistente</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">

        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
            <span class="oi oi-home" aria-hidden="true"></span> Inicio
        </NavLink>

        @if (mostrarAsignacionVieja)
        {
                <AuthorizeView Roles="User,Admin">
                    <NavLink class="nav-link"  type="button" href="Asignacion/viejoPensum">
                        <span class="oi oi-cog" aria-hidden="true"></span>  Asignacion pensum anterior
                    </NavLink>
                </AuthorizeView>
        }

        <AuthorizeView Roles="User,Admin">
            <NavLink class="nav-link"  type="button" href="cursos/listaCursos">
                <span class="oi oi-list" aria-hidden="true"></span>  Cursos asignados
            </NavLink>
            <NavLink class="nav-link"  type="button" href="cursos/manejador">
                <span class="oi oi-cog" aria-hidden="true"></span>  Administrar cursos
            </NavLink>
        </AuthorizeView>
         <NavLink class="nav-link"  type="button" href="about">
            <span class="oi oi-info" aria-hidden="true"></span> Desarrollador
        </NavLink>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool mostrarAsignacionVieja;
    private string UserId;
    private bool cargando = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    #region VALIDACION para mostrar o no la opcion de asignacion

    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        if (user.Identity.IsAuthenticated)
        {
            UserId = user.FindFirstValue(ClaimTypes.NameIdentifier);
            // Utiliza el userId como necesites
            var state = obUsuario.obtenerUsuarioPorId(UserId);
            if (state == null)
            {
                return;
            }
            mostrarAsignacionVieja = state.AsignacionVieja;
        }

    }

    #endregion

}
